import requests
import socket
import ssl
import time
from colorama import Fore, Style, init

init(autoreset=True)

def print_intro():
    print(Fore.WHITE + "Made By MesTer AnOnYmOuS")
    print(Fore.YELLOW + "1. Check the response of the site")
    print(Fore.YELLOW + "2. Port scan")
    print(Fore.YELLOW + "3. Check HTTP headers")
    print(Fore.YELLOW + "4. Checking IP Address")
    print(Fore.YELLOW + "5. HTTPS check")
    print(Fore.YELLOW + "6. Exit")

def check_response(url):
    start_time = time.time()
    try:
        response = requests.get(url)
        response_time = time.time() - start_time
        status_code = response.status_code
        ssl_status = "Active" if response.url.startswith("https") else "Not Active"
        
        print(Fore.YELLOW + f"Status Code: {status_code}")
        print(Fore.YELLOW + f"Response Time: {response_time:.2f} seconds")
        print(Fore.YELLOW + f"SSL Certificate: {ssl_status}")
        
        with open("response_report.txt", "w") as f:
            f.write(f"Status Code: {status_code}n")
            f.write(f"Response Time: {response_time:.2f} secondsn")
            f.write(f"SSL Certificate: {ssl_status}n")
        
        print(Fore.GREEN + "Report saved to 'response_report.txt'")
    
    except Exception as e:
        print(Fore.RED + f"Error: {e}")

def port_scan():
    target = input("Enter the host (e.g., example.com): ")
    ports = [22, 80, 443]
    open_ports = []

    for port in ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((target, port))
        if result == 0:
            open_ports.append(port)
        sock.close()

    if open_ports:
        print(Fore.YELLOW + f"Open ports on {target}: {', '.join(map(str, open_ports))}")
    else:
        print(Fore.YELLOW + "No open ports found.")

def check_http_headers(url):
    try:
        response = requests.get(url)
        headers = response.headers
        
        print(Fore.YELLOW + "HTTP Headers:")
        for key, value in headers.items():
            print(f"{key}: {value}")
        
        with open("http_headers_report.txt", "w") as f:
            for key, value in headers.items():
                f.write(f"{key}: {value}n")
        
        print(Fore.GREEN + "Report saved to 'http_headers_report.txt'")
    
    except Exception as e:
        print(Fore.RED + f"Error: {e}")

def checking_ip_address(url):
    ip_address = socket.gethostbyname(url)
    print(Fore.YELLOW + f"IP Address of {url}: {ip_address}")

def https_check(url):
    if url.startswith("https://"):
        print(Fore.GREEN + "The site uses HTTPS.")
    else:
        print(Fore.RED + "The site does not use HTTPS.")

def main():
    while True:
        print_intro()
        choice = input("Choose an option (1-6): ")
        
        if choice == '1':
            url = input("Enter the URL: ")
            check_response(url)
        elif choice == '2':
            port_scan()
        elif choice == '3':
            url = input("Enter the URL: ")
            check_http_headers(url)
        elif choice == '4':
            url = input("Enter the URL: ")
            checking_ip_address(url)
        elif choice == '5':
            url = input("Enter the URL: ")
            https_check(url)
        elif choice == '6':
            break
        else:
            print(Fore.RED + "Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
